# -*- coding: utf-8 -*-
"""fertilizer_recommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zbACsdWj28yZonNZ8N702uH_-XFRtpCh
"""

import numpy as np
import pandas as pd

data=pd.read_csv("/content/Fertilizer Prediction.csv")

data.head()

data.columns

data.isnull()

data.tail

data.isnull().sum()

data.tail()

from sklearn.preprocessing import LabelEncoder
mod=LabelEncoder()
data['Soil Type']=mod.fit_transform(data['Soil Type'])

data['Crop Type'].unique()

data['Crop Type']=mod.fit_transform(data['Crop Type'])

data.head()

data['Fertilizer Name'].unique()

data['Fertilizer Name']=data['Fertilizer Name'].replace({'Urea':1,'DAP':2,'14-35-14':3,'28-28':4,'17-17-17':5,'20-20':6,'10-26-26':7})

x=data.drop(['Fertilizer Name'],axis=1)

y=data['Fertilizer Name']



from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)

from sklearn.neighbors import KNeighborsClassifier
model=KNeighborsClassifier(n_neighbors=4)

model.fit(x_train,y_train)

model.predict(x_test)

model.score(x_test,y_test)

from sklearn.linear_model import LogisticRegression
model1=LogisticRegression()
model1.fit(x_train,y_train)

model1.score(x_test,y_test)

import pickle

# Save the trained model as a pickle string.
saved_model = pickle.dumps(model1)

# Load the pickled model
knn_from_pickle = pickle.loads(saved_model)

# Use the loaded pickled model to make predictions
knn_from_pickle.predict(x_test)

# save the model to disk
filename = 'finalized_model.sav'
pickle.dump(model, open(filename, 'wb'))


loaded_model = pickle.load(open(filename, 'rb'))
result = loaded_model.score(x_test, y_test)
print(result)